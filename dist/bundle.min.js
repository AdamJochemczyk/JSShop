/******/ (() => { // webpackBootstrap
/*!*********************!*\
  !*** ./src/shop.js ***!
  \*********************/
var productGallery,
    productCounter,
    wrapper,
    goToSummaryBtn,
    summary,
    leaveSummaryBtn,
    summaryFooter,
    productsToBuy = [];
var itemsInShop = [{
  name: "Guyaki traditional",
  price: 2
}, {
  name: "Mate green",
  price: 3
}, {
  name: "Elaborada",
  price: 2.5
}, {
  name: "YerbaKit",
  price: 10
}, {
  name: "Rio negro",
  price: 7.5
}, {
  name: "YerbaCan",
  price: 5
}];

function getElements() {
  productGallery = document.querySelector(".productGallery");
  productCounter = document.querySelector(".client__cart span");
  goToSummaryBtn = document.querySelector(".client__cart a");
  wrapper = document.querySelector("#wrapper");
  summary = document.querySelector(".orderSummary");
  leaveSummaryBtn = document.querySelector("#close");
  summaryFooter = document.querySelector(".summary");
  console.log(productGallery);
}

getElements();

function generateGalleryItem(item, index) {
  var name = item.name,
      price = item.price;
  return "\n            <div class=\"product\">\n             <p class=\"product__name\">".concat(name, "</p>\n             <div class=\"img__container\">\n            <img src=\"images/product").concat(index + 1, ".jpg\" alt=\"").concat(name, "\" class=\"product__img\">\n            </div>\n             <div class=\"product__params\">\n                <p class=\"product__price\"><span>").concat(price, "</span><span> $</span></p>\n                <a href=\"shop.html\" class=\"addToShoppingCart\">Add to cart</a>\n              </div>\n        </div>\n            ");
}

var html1 = itemsInShop.map(function (item, index) {
  return generateGalleryItem(item, index);
}).join("");
var html2 = itemsInShop.map(function (item, index) {
  return generateGalleryItem(item, index);
}).join("");
productGallery.innerHTML = html1 + html2;

function generateSummaryItem(_ref) {
  var src = _ref.src,
      alt = _ref.alt,
      amount = _ref.amount,
      price = _ref.price;
  return "\n<div class=\"toBuyProduct\">\n          <div class=\"toBuyProduct__left\">\n            <img src=\"".concat(src, "\" alt=\"").concat(alt, "\">\n          </div>\n          <div class=\"toBuyProduct__right\">\n            <h1>").concat(alt, "</h1>\n            Amount: <input class=\"toBuyProduct__amount\" type='number' value='").concat(amount, "' min='1'>\n            <button type=\"button\" class=\"toBuyProduct__remove\">Remove</button>\n            <span class=\"cost\">Total: ").concat(amount * price, " $</span>\n          </div>\n          </div>\n          <hr />\n        ");
}

function removeItem(e) {
  var itemNameToRemove = e.target.parentNode.querySelector("h1").innerText;
  productsToBuy = productsToBuy.filter(function (_ref2) {
    var alt = _ref2.alt;
    return alt !== itemNameToRemove;
  });
  updateSummaryItems();
}

function updateRemoveButtons() {
  var removeButtons = Array.from(document.querySelectorAll(".toBuyProduct__remove"));
  removeButtons.forEach(function (removeButton) {
    removeButton.addEventListener("click", removeItem);
  });
}

function getTotalCost() {
  return productsToBuy.reduce(function (prev, _ref3) {
    var price = _ref3.price,
        amount = _ref3.amount;
    return prev + price * amount;
  }, 0);
}

function addSummarySubmitAction() {
  document.querySelector(".summary__submit").addEventListener("click", function (e) {
    e.preventDefault();
    alert("Thanks for checking my shop demo");
  });
}

function generateSummaryFooter() {
  summaryFooter.innerHTML = "\n        <span>Total cost: ".concat(getTotalCost(), " $</span><a href=\"\" class=\"summary__submit\">Submit order</a>\n        ");
  addSummarySubmitAction();
}

function addProductToBuy(productSrc, productName, productPrice) {
  var found = false;

  for (var i = 0; i < productsToBuy.length; i++) {
    if (productsToBuy[i].alt == productName) {
      productsToBuy[i].amount++;
      found = true;
      break;
    }
  }

  if (!found) {
    productsToBuy.push({
      src: productSrc,
      alt: productName,
      price: productPrice,
      amount: 1
    });
  }
}

function updateProductsCounter() {
  productCounter.innerHTML = productsToBuy.reduce(function (prev, _ref4) {
    var amount = _ref4.amount;
    return prev + amount;
  }, 0);
}

function updateAmountInItem() {
  var inputs = Array.from(document.querySelectorAll(".toBuyProduct__amount"));
  inputs.forEach(function (input) {
    input.addEventListener("change", function (e) {
      var newAmount = parseInt(e.target.value);

      if (newAmount < 1) {
        newAmount = 1;
      }

      var itemName = e.target.parentNode.querySelector("h1").innerText;

      for (var i = 0; i < productsToBuy.length; i++) {
        if (productsToBuy[i].alt === itemName) {
          productsToBuy[i].amount = newAmount;
        }
      }

      updateSummaryItems();
    });
  });
}

function updateSummaryItems() {
  var summaryItemsHTML = productsToBuy.map(function (productToBuy) {
    return generateSummaryItem(productToBuy);
  }).join("");
  document.querySelector(".product-in-summary").innerHTML = summaryItemsHTML;
  updateRemoveButtons();
  generateSummaryFooter();
  updateProductsCounter();
  updateAmountInItem();
}

function handleAddToShoppingCartClick(e) {
  e.preventDefault();
  var product = e.currentTarget.parentNode.parentNode.querySelector("img");
  var productSrc = product.src;
  var productName = product.alt;
  var productPrice = parseInt(e.currentTarget.parentNode.parentNode.querySelector(".product__price").firstChild.innerHTML);
  addProductToBuy(productSrc, productName, productPrice);
  updateProductsCounter();
  updateSummaryItems();
}

var products = document.querySelectorAll("a.addToShoppingCart");
products.forEach(function (product) {
  return product.addEventListener("click", handleAddToShoppingCartClick);
});

function actionSummary(e) {
  e.preventDefault();
  wrapper.classList.toggle("wrapper");
  summary.classList.toggle("openSummary");
}

function getSummaryButtons() {
  goToSummaryBtn.addEventListener("click", actionSummary);
  leaveSummaryBtn.addEventListener("click", actionSummary);
}

getSummaryButtons(); //export { generateGalleryItem };
/******/ })()
;
//# sourceMappingURL=bundle.min.js.map